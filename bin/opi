#!/usr/bin/python3

import os
import sys
import argparse
import textwrap
sys.path.insert(0, os.path.abspath(os.path.dirname(__file__) + '/..'))

import opi
from opi.plugins import PluginManager
from opi.version import __version__

try:
	pm = PluginManager()
	ap = argparse.ArgumentParser(
		formatter_class=argparse.RawDescriptionHelpFormatter,
		description=textwrap.dedent('''\
			openSUSE Package Installer
			==========================

			Search and install almost all packages available for openSUSE and SLE:
			  1. openSUSE Build Service
			  2. Packman
			  2. Popular packages for various vendors

		'''),
		epilog=textwrap.dedent('''\
			Also these queries can be used to install packages from various other vendors:
		''') + pm.get_plugin_string(' '*2))

	ap.add_argument('query', nargs='?', type=str,
		help='can be any package name or part of it and will be searched for both at the openSUSE Build Service and Packman.'
	)
	ap.add_argument('-v', '--version', action='version', version=('opi version ' +  __version__))
	ap.add_argument('-r', '--reversed-output', action='store_true', help='print the search results in reverse')
	ap.add_argument('keyword', nargs='?', type=str,
		help='filter the search results with this keyword', default=""
	)

	args = ap.parse_args()

	if len(sys.argv) < 2:
		ap.print_help()
		sys.exit()

	# Try to find a matching plugin for the query (and run it and exit afterwards)
	pm.run(args.query)

	binaries = []
	binaries.extend(opi.search_published_binary('openSUSE', args.query))
	binaries.extend(opi.search_published_binary('Packman', args.query))
	binaries = opi.sort_binaries(binaries)
	if len(binaries) == 0:
		print("No package found.")
		sys.exit()
	binary_names = opi.get_binary_names(binaries)

	# Print package name options, returns the package numbers that were printed and can be selected by user
	selectable_nums = opi.print_package_names(binary_names, args.keyword, reverse=args.reversed_output)

	# Select a package name option
	selected_name_num = opi.ask_number(selectable_nums)
	selected_name = binary_names[selected_name_num-1]
	print("You have selected package name: %s" % selected_name)
	binary_options = opi.get_binaries_by_name(selected_name, binaries)

	# Print binary package options
	opi.print_binary_options(binary_options)

	# Select a binary package option
	selected_binary_num = opi.ask_number(selectable_nums)
	selected_binary = binary_options[selected_binary_num-1]
	print("You have selected binary package: ", end='')
	opi.print_binary_option(selected_binary)
	if opi.is_personal_project(selected_binary['project']):
		print(opi.colored(
			"BE CAREFUL! The package is from a personal repository and NOT reviewed by others.\n"
			"You can ask the author to submit the package to development projects and openSUSE:Factory.\n"
			"Learn more at https://en.opensuse.org/openSUSE:How_to_contribute_to_Factory",
			'red'
		))

	# Install selected package
	opi.install_binary(selected_binary)
except KeyboardInterrupt:
	print()
